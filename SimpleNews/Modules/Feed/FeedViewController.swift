//
//  FeedViewController.swift
//  SimpleNews
//
//  Created by Levente Vig on 2020. 11. 30..
//  Copyright (c) 2020. levivig. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

final class FeedViewController: BaseTabbarProtocolController {

    // MARK: - Public properties -
    
    override var tabbarTitle: String? { "Feed".localized }
    override var tabbarImage: UIImage? { UIImage(systemName: "list.dash") }
    override var selectedTabbarImage: UIImage? { UIImage(systemName: "list.dash")?.withTintColor(.black, renderingMode: .alwaysOriginal) }

    var presenter: FeedPresenterInterface!
    
    // MARK: - Private properties -
    
    private var collectionView: UICollectionView!

    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()
        setup()
        presenter.viewDidLoad()
    }
    
    // MARK: - Initialization -
    
    private func setup() {
        initCollectionView()
    }
    
    private func initCollectionView() {
        let layout = UICollectionViewFlowLayout()
        collectionView = UICollectionView(frame: .zero, collectionViewLayout: layout)
        
        collectionView.dataSource = self
        collectionView.delegate = self
        
        collectionView.register(cellWithClass: FeedCell.self)

        view.addSubview(collectionView)
        collectionView.snp.makeConstraints { make in
            make.edges.equalToSuperview()
        }
    }

}

// MARK: - Extensions -

extension FeedViewController: FeedViewInterface {
    func reload() {
        DispatchQueue.main.async {
            self.collectionView.reloadData()
        }
    }
}

extension FeedViewController: UICollectionViewDataSource {
    func numberOfSections(in collectionView: UICollectionView) -> Int {
        presenter.numberOfSections()
    }
    
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        presenter.numberOfItems(in: section)
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        let cell = collectionView.dequeueReusableCell(withClass: FeedCell.self, for: indexPath)
        let model = presenter.itemAt(indexPath: indexPath)
        cell.bind(model: model)
        return cell
    }
}

extension FeedViewController: UICollectionViewDelegate {
    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        presenter.didSelectItemAt(indexPath: indexPath)
    }
}
