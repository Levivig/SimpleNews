//
//  FeedPresenter.swift
//  SimpleNews
//
//  Created by Levente Vig on 2020. 11. 30..
//  Copyright (c) 2020. levivig. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

final class FeedPresenter {

    // MARK: - Private properties -

    private unowned let view: FeedViewInterface
    private let interactor: FeedInteractorInterface
    private let wireframe: FeedWireframeInterface
    
    private var items: [[NewsArticle]] = [] {
        didSet {
            view.reload()
        }
    }

    // MARK: - Lifecycle -

    init(view: FeedViewInterface, interactor: FeedInteractorInterface, wireframe: FeedWireframeInterface) {
        self.view = view
        self.interactor = interactor
        self.wireframe = wireframe
    }

    func viewDidLoad() {
        loadData()
    }
    
    private func loadData() {
        interactor.getNews { [weak self]  result in
            switch result {
            case .success(let data):
                self?.items = [data.articles]
            case .failure(let error):
                self?.wireframe.showErrorAlert(with: error.localizedDescription)
            }
        }
    }
}

// MARK: - Extensions -

extension FeedPresenter: FeedPresenterInterface {
    func numberOfSections() -> Int {
        items.count
    }
    
    func numberOfItems(in section: Int) -> Int {
        items[section].count
    }
    
    func itemAt(indexPath: IndexPath) -> NewsArticle {
        items[indexPath.section][indexPath.row]
    }
    
    func didSelectItemAt(indexPath: IndexPath) {
        let item = items[indexPath.section][indexPath.row]
        log.debug(item)
    }
    
}
