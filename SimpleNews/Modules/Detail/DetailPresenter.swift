//
//  DetailPresenter.swift
//  SimpleNews
//
//  Created by Levente Vig on 2020. 12. 06..
//  Copyright (c) 2020. levivig. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit

final class DetailPresenter {

    // MARK: - Private properties -

    private unowned let view: DetailViewInterface
    private let interactor: DetailInteractorInterface
    private let wireframe: DetailWireframeInterface
    
    private var article: NewsArticle

    // MARK: - Lifecycle -

    init(view: DetailViewInterface, interactor: DetailInteractorInterface, wireframe: DetailWireframeInterface, article: NewsArticle) {
        self.view = view
        self.interactor = interactor
        self.wireframe = wireframe
        self.article = article
    }
    
    func viewDidLoad() {
        view.bind(model: article)
    }
}

// MARK: - Extensions -

extension DetailPresenter: DetailPresenterInterface {
    func bookmarkButtonTapped(isOn: Bool) {
        article.isBookmark = isOn
        let url = article.url
        kAppDelegate.appController.updateBookmark(isOn: isOn, url: url)
    }
    
    func readButtonTapped() {
        wireframe.open(url: article.url)
    }
}
